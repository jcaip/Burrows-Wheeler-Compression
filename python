#TODO refactor code and split up into multiple classes: 
# move to front; Huffman; CSA; and Burrows Wheeler from CSA import CSA
from time import clock
from CSA import CSA
import sys
class BWT():
    def encode(self,text):
        c = CSA(text)
        print(c)
        t=bytearray()
        for i in range(0,len(text)):
            index = c.getIndex(i)
            if index !=0:
                t.append(text[c.getIndex(i)-1])
            else:
                t =bytearray(int.to_bytes(i,sys.byteorder)).append(t)
                t.append(text[-1])
        return t
text = open('tests/6kb_test.txt','rb').read()
b = BWT()
t= clock()
print(b.encode(text))
print(clock()-t)
